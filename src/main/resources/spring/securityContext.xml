<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<beans:bean id="loggerListener"
		class="org.springframework.security.authentication.event.LoggerListener" />

<!--   @Secured("IS_AUTHENTICATED_ANONYMOUSLY") -->
<!--   @PreAuthorize("isAnonymous()") -->
<!--   public Account[] findAccounts(); -->
<!--   @PreAuthorize("hasAuthority('ROLE_TELLER')") -->

<!-- 	<global-method-security pre-post-annotations="enabled" jsr250-annotations="enabled"> -->
<!-- 		<expression-handler ref="expressionHandler" /> -->
<!-- 	</global-method-security> -->



	<http pattern="/javax.faces.resource/**" security="none"/>
<!-- 	<intercept-url pattern="/logout" method="POST" access="IS_AUTHENTICATED_ANONYMOUSLY"/> -->

	<http>
		<!-- <intercept-url pattern="/**" access="ROLE_USER" /> -->
<!-- 		<intercept-url pattern="/javax.faces.resource/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/> -->
		<intercept-url pattern="/login.xhtml" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<intercept-url pattern="/map.xhtml" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<intercept-url pattern="/**" access="ROLE_USER" />
<!-- 		<http-basic /> -->
		<form-login login-page="/login.xhtml"
			username-parameter="username"
			password-parameter="password"
			default-target-url="/welcome.xhtml" 
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/map.xhtml"/>
		<logout logout-url="/logout"
			invalidate-session="true"
			delete-cookies="JSESSIONID"
			logout-success-url="/map.xhtml"/>
			
				

		<!-- <custom-filter ref="myAuthFilter" position="FORM_LOGIN_FILTER" /> -->
		<!-- <session-management -->
		<!-- session-authentication-strategy-ref="sas" /> -->

<!-- 		<csrf /> -->
		<headers />
	</http> 	

	

	<authentication-manager>
		<authentication-provider user-service-ref='myUserDetailsService'>
			<password-encoder ref="passwordEncoder" />
			<!-- <user-service> -->
			<!-- <user name="admin" password="admin" authorities="ROLE_USER" /> -->
			<!-- </user-service> -->
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="myUserDetailsService"
			class="com.github.nill14.ttool.spring.security.MyUserDetailsService">
<!-- 	    class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl"> -->
<!-- 	  <beans:property name="dataSource" ref="dataSource"/> -->
	</beans:bean>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

		
<!-- 		<beans:bean id="expressionHandler" class="CustomExpressionHandler"/> -->
</beans:beans>
